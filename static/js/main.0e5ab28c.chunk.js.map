{"version":3,"sources":["modules/infinityscroll/index.ts","modules/infinityscroll/reducer.ts","api/ArchiveAPI.ts","modules/infinityscroll/sagas.ts","components/Feture.tsx","containers/FeatureContainer.tsx","containers/FooterContainer.tsx","components/HeaderTo.tsx","containers/HeaderContainer.tsx","containers/InfiniteContainer.tsx","components/Intro.tsx","containers/IntroContainer.tsx","components/TypingAnime.tsx","containers/SummaryContainer.tsx","containers/BodyContainer.tsx","App.tsx","reportWebVitals.js","styles/GlobalStyle.ts","modules/index.ts","index.tsx","styles/theme.ts","modules/infinityscroll/actions.ts"],"names":["infinityState","loading","data","error","end","infinityreducer","state","action","type","CALL_DATA","datas","CALL_DATA_SUCEESS","CALL_DATA_ERROR","loaing","CALL_DATA_SEARCH","CALL_DATA_SEARCH_SUCEESS","CALL_DATA_SEARCH_ERROR","RESET_DATA","END_CALL","archivedata","sleep","n","Promise","resolve","setTimeout","getDatas","num","a","start","newdatas","slice","length","concat","getDatasbySearch","search","newdummy","filter","includes","addDatasSaga","searchDataSaga","resetData","InfinitySaga","count","console","log","call","infinityAPI","put","takeLeading","takeLatest","FetureBlock","styled","div","props","theme","mjcolor","gitborder","cosmic_siam","mediumde","Feture","id","name","useState","aniclass","setaniclass","useEffect","window","addEventListener","scrollcheck","removeevent","removeEventListener","target","document","getElementById","toString","clientRect","getBoundingClientRect","bottom","innerHeight","className","src","alt","techfetures","smallde","FetureContainer","map","feture","FooterBlock","gitbackground","mjblack","grayfont","FooterContainer","Headertoblock","cursurbackground","boxname","convert","HeaderTo","toscroll","onBrowser","setonBrowser","box","browser","documentElement","isOnBrowser","boxTop","offsetTop","boxBottom","offsetHeight","browserH","clientHeight","scrollP","scrollTop","onClick","HeaderBlock","hoverclosebackground","HeaderContainer","to","scrollTo","location","reload","href","Infiniteblock","librarytitle","zinmuk","InfiniteContainer","useSelector","dispatch","useDispatch","setinput","toggle","settogle","calldata","resetdata","onChange","e","value","placeholder","onScroll","scrollHeight","calldatasearch","IntrocomponentBlock","hoveractivebackground","Intro","title","content","onopen","onReset","onOpen","onClose","openintro","closeintro","introcontents","reducer","intro","IntroBlock","IntroContainer","useReducer","Intros","TypingBlock","animeid","TypingAnime","contents","typetext","settypetext","typingIdx","typingtxt","split","setInterval","typing","thread","clearInterval","summaries","mjtitle","mjdescription","SummaryBlock","SummaryContainer","BodyContainterBlock","BodyContatiner","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","reset","rootSaga","rootReducer","combineReducers","all","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","largede","realblack","karazeclible","siam","moonlightblack","borderofrealback"],"mappings":"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","file":"static/js/main.0e5ab28c.chunk.js","sourcesContent":["export {default} from './reducer';\r\nexport * from './actions';\r\nexport * from './types';\r\nexport * from './sagas';","import { CALL_DATA, CALL_DATA_ERROR, CALL_DATA_SEARCH, CALL_DATA_SEARCH_ERROR, CALL_DATA_SEARCH_SUCEESS, CALL_DATA_SUCEESS, END_CALL, RESET_DATA } from \"./actions\";\r\nimport { infinityaction, infinityStatetype } from \"./types\";\r\n\r\nconst infinityState : infinityStatetype = {\r\n    loading : false,\r\n    data : null,\r\n    error : null,\r\n    end : false,\r\n}\r\n\r\nfunction infinityreducer(state : infinityStatetype = infinityState, action : infinityaction){    \r\n    switch(action.type){\r\n        case CALL_DATA : {\r\n            return {\r\n                ...state,\r\n                loading : true,\r\n                data : action.datas,\r\n                //error : null,\r\n            }\r\n        }\r\n        case CALL_DATA_SUCEESS : {\r\n            return {\r\n                ...state,\r\n                loading : false,\r\n                data : action.data,\r\n                //error : null,\r\n            }\r\n        }\r\n        case CALL_DATA_ERROR : {\r\n            return {\r\n                ...infinityState,\r\n                loaing : false,\r\n                error : action.error,\r\n            }\r\n        }\r\n\r\n        case CALL_DATA_SEARCH : {\r\n            return {\r\n                ...state,\r\n                loading : true,\r\n                data : action.datas,\r\n                //error : null,\r\n            }\r\n        }\r\n        case CALL_DATA_SEARCH_SUCEESS : {\r\n            return {\r\n                ...state,\r\n                loading : false,\r\n                data : action.data,\r\n                //error : null\r\n            }\r\n        }\r\n        case CALL_DATA_SEARCH_ERROR : {\r\n            return {\r\n                ...infinityState,\r\n                loaing : false,\r\n                error : action.error\r\n            }\r\n        }\r\n\r\n        case RESET_DATA : {\r\n            return{\r\n                loading : true,\r\n                data : [],\r\n                error : null,\r\n                end : false,\r\n            }\r\n        }\r\n\r\n        case END_CALL :{\r\n            return{\r\n                ...state,\r\n                end : true,\r\n            }\r\n        }\r\n\r\n        default : return state;\r\n    }\r\n}\r\n\r\nexport default infinityreducer;","export type datastype = string[];\r\n\r\nexport const archivedata = [    \r\n`프로젝트 기본설정 \\n`+    \r\n`1. npx creat-react-app\\n\\n`+\r\n`2. 플젝폴더에서 npm install --save typescript @types/node @types/react @types/react-dom @types/jest \\n`+\r\n`혹은 yarn add typescript @types/node @types/react @types/react-dom @types/jest \\n`+\r\n`\\n3.\\n`+\r\n`setupTests.ts \\n`+\r\n`logo.svg \\n`+\r\n`serviceWorker.ts \\n`+\r\n`App.test.tsx \\n`+\r\n`안쓰니까 제거하기\\n`+\r\n`\\n4.\\n`+\r\n`tsconfig.json(yarn start 함 하면 나옴)에서 절대경로 설정하기\\n`+\r\n`\"jsx\"밑에 \"baseUrl\" : \"src\"넣기\\n`+\r\n`\\n5.\\n`+\r\n`쓸 라이브러리들 설치\\n`+\r\n`스타일드컴포넌트\\n`+\r\n`yarn add styled-components\\n`+\r\n`yarn add @types/styled-components\\n`+\r\n`\\n6. css 준비\\n`+\r\n`6_1.\\n`+\r\n`스타일 리셋 패키지 설치\\n`+\r\n`yarn add styled-reset\\n`+\r\n`src에 styles 폴더\\n`+\r\n`GlobalStyle.ts\\n`+\r\n`import {createGlobalStyle} from 'styled-components';\\n`+\r\n`import reset from 'styled-reset';\\n`+\r\n'const GlobalStyle = createGlobalStyle`` '+\r\n'$붙인{reset}\\n'+\r\n`이를 디폴트로 글로벌 스타일을 지정.\\n`+\r\n`\\n6_2.\\n`+\r\n`폰트는 src아래에 font폴더 만들고 폰트 파일들을 모아주며 \\n`+\r\n`font폴더에서 fonts.css에서 @font-face{font-family : '폰트이름'; src : url('해당경로')} 지정.\\n`+\r\n`쓸땐 import 'fonts.css'경로를 쓰고 지정한 폰트이름으로 쓰면된다.(font-family : '폰트이름')\\n`+\r\n`\\n6_3\\n`+\r\n`theme을 쓰기위해 styles폴더에\\n`+\r\n`styled.d.ts파일 생성\\n`+\r\n`import 'styled-components';\\n`+\r\n`declare module 'styled-components'{\\n`+\r\n` export interface DefaultTheme{ 안에 커스텀 theme 객체들 형태지정 }\\n`+\r\n`}\\n`+\r\n`theme.ts를 styles폴더에 생성하고\\n`+\r\n`import {DefaultTheme} from 'styled-components';\\n`+\r\n`const theme:DefaultTheme = { 안에 theme객체들 내용지정 };\\n`+\r\n`export {theme}\\n`+\r\n`최외곽 index.tsx에서\\n`+\r\n`<ThemeProvider theme = {theme}>으로 앱을 감싸준다.\\n`+\r\n`<GrobalStyle/>을 앱위에 배치해준다.\\n`+\r\n`씸프로바이더에는 단일자식만 있어야한다.\\n`+\r\n`\\n7. src아래에 쓸 폴더들 생성해두기\\n`+\r\n`api : 데이터들과 그걸 리턴하거나 쓸 함수들\\n`+\r\n`components : 컨테이너에 담을 요소들(tsx들)\\n`+\r\n`containers : 페이지에서 굵직굵직한 한 박스들(tsx들)\\n`+\r\n`hooks : 만든 커스텀 훅을 저장할곳\\n`+\r\n`modules : 리덕스와 미들웨어들관리할곳. 한 상태관리마다 하나의 폴더\\n`+\r\n`기본설정의 끝!\\n`+\r\n`퍼블릭의 index.html가다듬기\\n`,\r\n\r\n`margin : 0 auto는 요소 자체를 가운데 정렬하기\\n`,\r\n\r\n`스타일드 컴포넌트에 프롭스 전달해주기\\n`+\r\n\"styled.div<{leftbase : string}>로 받고\\n\"+\r\n\"${ ({leftbase}) => leftbase && `left : ${leftbase};`  }\\n\"+\r\n`식으로 사용해주면 된다.\\n`+\r\n\"${ (props) => props.leftbase && `left : ${props.leftbase}` }\\n\"+\r\n`이것도 된다\\n`,\r\n\r\n`****************************************************************\\n`+\r\n`객체 인덱스가 스트링이라고 안될땐\\n`+\r\n`타입 지정해놓은곳 가서 [key : string] : string 해주면 된다.\\n`+\r\n`********16시간의 구글링******************************************\\n`,\r\n\r\n`앱솔루트된걸 가운데정렬하려면\\n`+\r\n`left 50% 하고 transform : translate(-50%, y축용)\\n`,\r\n\r\n`map 같은 jsx안에서 개행넣고싶을땐\\n`+\r\n`{data && data.map(floor => {return <>{floor.name}<br/></>})}\\n`,\r\n\r\n`유즈레프는 돔에접근이나, 변수하나 필요할때\\n`+\r\n`useRef<HTMLInputElement>(null);돔용은 이렇게 반드시 널로넣고\\n`+\r\n`사용할땐 널체킹을 해준다\\n`,\r\n\r\n`액션을 모을 땐\\n`+\r\n`typesafe-actions 라이브러리를 사용한다\\n`,\r\n\r\n`typescript children 타입\\n`+\r\n`children : React.ReactNode,\\n`,\r\n\r\n`디폴트 프롭스 쓰는법\\n`+\r\n`함수이름.defaultProps\\n`,\r\n\r\n`자바스크립트 문자열 멀티라인\\n`+\r\n`' ' + ' '\\n`,\r\n\r\n`large Device : 데스크탑 1024px이상\\n`+\r\n`medifum device : 태블릿용 1024px이하\\n`+\r\n`small Device : 태블릿과 폰 768px이하\\n`,\r\n\r\n`index.html측\\n`+\r\n`fav콘은 퍼블릭폴더안에 index.html\\n`+\r\n`<meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\\n`+\r\n`이건 익플쓰는사람들 최신의 방식으로 렌더링하게 해주세요 어지간하면 이거쓴다.\\n`+\r\n`<meta property = 'og:type' content='타입e'>\\n`+\r\n`<meta property = 'og:title' content='타이틀'>\\n`+\r\n`이 사이트의 정보 정보가 타입, 타입은 웹사이트 이걸 밖에 내보낼때 쓴다.\\n`+\r\n`OG(open graph는 페이스북) TC(Twitter Card는 트위터)\\n`,\r\n\r\n'BEM 작명규칙\\n'+\r\n'CSS의 작명규칙\\n'+\r\n'요소의 일부분은 __를 사용\\n'+\r\n'요소의 상태는 --를 사용\\n'+\r\n'이름(ex : toggle-btn)은 -하나쓰기 일반적인 작명\\n',\r\n\r\n`그라데이션에 쓰는\\n`+\r\n`background : 바로뒤에 쓰는\\n`+\r\n`linear-gradient(to 방향, 시작색, 끝색);\\n`+\r\n`위를 밝고 아래를 어둡게 쓰는 입체감에 사용\\n`,\r\n\r\n`아랫것들을 쓰려면 일단 컨테이너를 display : flex; 해주자!\\n`+\r\n`align-items : center 는 열(수직축) 가운데\\n`+\r\n`justify-contents : center는 행(수평축) 가운데\\n`+\r\n`어라인만 쓰고 패딩 : 0 12px식으로정렬\\n`+\r\n`플렉스 하면 블록으로만드니 버튼같은건 inline-flex해주자\\n`,\r\n\r\n`포지션 없을때 추가할거면 position relative\\n`,\r\n\r\n`:hover::before\\n`+\r\n`:hover::after\\n`+\r\n`내용이 없어도 content : ''을 해놓고 사용한다`+\r\n`그냥 hover보다 이걸 쓰는 이유\\n`+\r\n`이걸 투명도 써서 위에 덮으면 그만큼 섞이는 효과\\n`,\r\n\r\n\"jsx에서 &nbsp(공백) 쓰기\\n{'\\\\u00A0'}\\n\",\r\n\r\n`input\\n`+\r\n`클릭하면 주변에 생기는 새 테두리는 outline이다!\\n`+\r\n`근데 이거 쓰기 힘들어서 그냥 outline : none해버린 뒤에\\n`+\r\n`:focus { border-color : 색;} 로 쓴다.\\n\\n`,\r\n\r\n`box-shadow : 0 1px 2px red; x축 0 y축 1px 블러가 2px 색이 빨강\\n`+\r\n`똑같은 박스를 만들고 블러 크기만큼 그 박스를 키우고 이동시키는형식\\n`+\r\n`그림자를 안쪽에 할거면 inset을 x축 앞에 붙인다\\n`,\r\n\r\n`box-shadow\\n`+\r\n`포커스랑 아닌거랑 둘다 그림자가 있을 때 아닌쪽 그림자가 사라져버림\\n`+\r\n`이게 싫으면 포커스쪽 그림자 앞에 바깥 그림자를 넣어서 , 로 구분하면 둘다나온다.\\n`,\r\n\r\n`클론코딩이든 페이지를 새로 만들든 최초의 구조를 잘 파악해놓자\\n`,\r\n\r\n`a href = '#' 안정해진곳\\n`+\r\n`a태그는 기본적으로 인라인이다\\n`+\r\n`필요할땐 display : block\\n`+\r\n`text-decoration : none; 하면 밑줄 다 없애기\\n`,\r\n\r\n`float를 해제해주는 클리어픽스\\n`+\r\n`.clearfix::after{\\n`+\r\n`content : '';\\n`+\r\n`clear : both;\\n`+\r\n`display : block;\\n`+\r\n`}\\n`+\r\n`   .float--left{\\n`+\r\n`        float : left;\\n`+\r\n`    }\\n`+\r\n`    .float--right{\\n`+\r\n`        float : right;\\n`+\r\n`    }\\n`+\r\n`담을 부모요소에서 클리어픽스 해주고\\n`+\r\n`담긴 자식에서 플로트레프트 라이트해준다\\n`,\r\n\r\n`아이디가있으면 클래스보다 우선해서 사용하자.\\n`+\r\n`잡다한 요소 하나 감추고싶은데 이름부여할만큼 중요하지 않다면\\n`+\r\n`& + [type='submit']식으로 지정해버리기\\n`,\r\n\r\n`배경때매 안에께 잘 안보이면 배경을 좀 어둡게 하는 방법으로 ::before를 쓸수있다!\\n`+\r\n`어두운 투명도있는걸 앞에 끼워주는식\\n`+\r\n`::before는 지가 속한곳을 부모로 인식한다!\\n`+\r\n`앱솔루트주고 위치를 조정한 뒤 어두운 박스를 하나 넣어주기.\\n`,\r\n\r\n`top 0 left 0 width 100 height 100 은\\n`+\r\n`top 0 left 0 right 0 bottom 0 은 같다\\n`,\r\n\r\n`background-size : cover 하면 아무리 줄여도 전체를 다 덮는다.\\n`+\r\n`커버랑 100%랑 같나? \\n`+\r\n`100%하면 가로 100%를 아랫변 다쓰느라 줄어든다\\n`+\r\n`커버하면 줄어들다 만다.\\n`,\r\n\r\n`li를 주루룩 쓸때 margin-bottom 을 설정했다면\\n`+\r\n`li:last-child{}에선 0으로 설정해주자.\\n`,\r\n\r\n`flex안에서 수평정렬하려면 justify-content 해야지 text-align으론 안된다.\\n`+\r\n`다른 요소를 이놈이 찌그러뜨리는걸\\n`+\r\n`flex-grow : 1;과\\n`+\r\n`flex-basis : 0;은 남은 영역을 자연스럽게 차지하게 한다.\\n`,\r\n\r\n`JSX에서 표현해야되는 특정 단어 2개를 묶기(같이 줄바꿈 세트로 하고싶은거)\\n`+\r\n`해당 부위를 ' '공백문자 말고 &nbsp;로 하면 한단어취급을 해준다\\n`,\r\n\r\n`가로 세로 비율을 유지하는 반응형박스\\n`+\r\n`padding-top : %는 부모요소의 가로사이즈 요소영향을 받는다\\n`+\r\n`부모의 가로가 500 : x = 16 : 9\\n`+\r\n`자식에게 height로 하면 고정되버리니까 자식 height는 0주고안에 padding-top : 56.25%하면 16:9비율로 공간이 만들어진다.\\n`+\r\n`원하는 진짜 요소를 absolute 주고 부모요소 top left width height로 귀속시킨다.\\n`,\r\n\r\n`유튜브영상 우클해서 소스코드 따오기 하면된다.\\n`,\r\n\r\n`행과 열을 주는방법 1\\n`+\r\n`부모 요소에 클리어픽스\\n`+\r\n`넣을 것들을 float하고 width : 25% 혹은 50%식으로 하기.\\n`+\r\n`반드시 패딩 등을 주의해서 box-sizing을 하자`,\r\n\r\n`이미지의 가변크기조정\\n`+\r\n`이미지 width : 100%일때라면\\n`+\r\n`이미지에 그냥 패딩을 주면 이미지가 안쭐어들고 마진준거처럼된다.(그리고 영역을 넘친다)\\n`+\r\n`box-sizing : border-box 주면 이미지가 쭈그러든다.\\n`+\r\n`이때 이미지보다 테두리가 작아지면 넘친다. 그래서 이미지의 max-width : 100%로 변경.\\n`,\r\n\r\n`float된 요소를 콕 집어서 가운데 정렬하기는 사실상 불가능하다\\n`+\r\n`감싼거에 text-align 주고 해당 요소에 display : inline-block으로 대체하자\\n`+\r\n`대신 이경우 요소사이에 여백이 발생한다!!\\n`+\r\n`1. 마진을 음수로하기\\n`+\r\n`2. 글자크기를 상위요소에서 0주고, 안에서 제대로 주기(이거쓰자)\\n`+\r\n`3. float면 안나옴.\\n`+\r\n`또 텍스트의 줄바꿈이 일어나던가 해서 축이이상할땐\\n`+\r\n`vertical-align : top등으로 해결한다.\\n`,\r\n\r\n`text-indent 는 인라인에서 안된다`,\r\n\r\n`지도 api\\n`+\r\n`yarn add @types/googlemaps\\n`+\r\n`단순히 public에있는 index에\\n`+\r\n`<script src = 'https://maps.googleapis.com/maps/api/js'></script>\\n`+\r\n`를 넣어서 google 네임스페이스를 이용할 수 있게 만들어주고 이용.\\n`+\r\n`위의 src 뒤에 ? key=api키를 넣을수있다`,\r\n\r\n`api키 깃허브 노출이 싫은 경우\\n`+\r\n`src밖에 .env를 만들고\\n`+\r\n`REACT_APP_API_KEY = 자신의 키\\n`+\r\n`처럼 환경변수를 하나 설정.\\n`+\r\n`.gitignore에 .env를 등록해서 깃허브올릴땐 감추기.\\n`+\r\n`쓸때는 const apiKey = process.env.REACT_APP_API_KEY해서 불러와서 씀\\n`,\r\n\r\n`async와 await\\n`+\r\n`function 앞에 async를 붙이면 함수는 항상 프로미스를 반환. 아닌걸 반환해도 이행 상태에 프로미스로 감싸서 반환한다.\\n`+\r\n`비동기작업을 하려면\\n`+\r\n`setTimeout()\\n`,\r\n\r\n`typescript에서 뭐는 널이라 안될수 있어요!!! 이게 널일수가 없는데!!! 하면 그 변수 뒤에 !를 붙여주자\\n`,\r\n\r\n`프로미스를 쓰는법\\n`+\r\n`리졸브는 성공할때 덴으로 받아오는측, reject는 실패했을때 catch로 받아오는측\\n`+\r\n`const myPromise = new Promise((resolve, reject)=>{\\n`+\r\n`            /*setTimeout(()=>{\\n`+\r\n`                resolve('resultsad')\\n`+\r\n`            }, 1000);*/\\n`+\r\n`            setTimeout(()=>{\\n`+\r\n`                reject(new Error());\\n`+\r\n`            },1000);\\n`+\r\n`        })\\n`+\r\n`        myPromise.then(results => {\\n`+\r\n`           console.log(results);\\n`+\r\n`        }).catch(e=>{\\n`+\r\n`            console.log(e, '에러');\\n`+\r\n`        })\\n`+\r\n`프로미스의 좋은점은 이 덴으로 끝난곳 뒤에 .catch나 .then을 또 붙일수있는거.\\n`,\r\n\r\n`가변 플렉스가 필요할때\\n`+\r\n`범위가 제일 유동적으로 변하는 곳에 flex-grow : 1; flex-basis : 0;\\n`,\r\n\r\n`미디어쿼리 간단정리\\n`+\r\n`@media 미디어타입 and (미디어특성){ css코드 }\\n`+\r\n`@media screen and (max-width : 1200px) { body{ color : red } }\\n`+\r\n`브라우저 크기가 1200px 이하면 컬러 레드\\n\\n`+\r\n`미디어타입\\n`+\r\n`all 모든 미디어 타입에 적용 디폴트\\n`+\r\n`screen 컴퓨터 화면, 타블렛, 스마트폰 등//주로쓰는거\\n`+\r\n`print 인쇄 전용//잘 안쓴다.\\n\\n`+\r\n`미디어특성\\n`+\r\n`width 뷰포트 가로너비 딱 이거일때\\n`+\r\n`max-width 뷰포트 최대 가로 너비(이하) 1200이면 1200보다 크면 안된다.\\n`+\r\n`min-width 뷰포트 최소 가로 너비(이상) 1200이면 1200보다 작으면 안된다.\\n`+\r\n`height max-height, min-height\\n`+\r\n`orientation 뷰포트 방향(portrait 세로가 긴형태, landscape 가로가 긴형태)\\n`,\r\n\r\n`브라우저 화면 크기가 변경될때마다. 작동하는 함수 등록법\\n`+\r\n`window.addEventListener('resize', function(){\\n`+\r\n`    if(window.innerWidth > 1024(이건 화면크기)){\\n`+\r\n`        함수\\n`+\r\n`    }\\n`+\r\n`});\\n`,\r\n\r\n`margin에 음수\\n`+\r\n`margin : 40px -20px 0 -20px 하면 좌우가 늘어난다!\\n`+\r\n`그런데 이때 width : 100%(부모의 크기를 따라가기때문)면 안된다 오히려 이상해진다\\n`,\r\n\r\n`JSX에서 스트링형을 때려박을때 x축이 넘치면 자동개행 이안된다\\n`+\r\n`이걸 해결하려면 white-space : pre-wrap추가\\n`+\r\n`그리고 단어 하나가 너어어무 길어도 개행이 안 될때\\n`+\r\n`단어를 뿌숴서라도 개행하려면 word-break : break all;\\n`,\r\n\r\n`비동기!\\n`+\r\n`1. setTimeout((),ms시간)\\n`+\r\n`안에 함수를 ms초 후에 실행하는 아주 간단한 비동기!\\n`+\r\n`이글 곧이 곧대로 쓰기 쓰기 힘들어서 나온\\n`+\r\n`2. Promise!\\n`+\r\n`new Promise( (resolve,error)=> { 여따셋타임아웃을 넣어주자 } )\\n`+\r\n`리조브는 성공하면 실행할거 에러는 에러나면 실행할거\\n`+\r\n`resolve(여기 리턴값) 저 결과는 이 함수를 부른곳에서 .then(result=>{result로 조회된다.})\\n`+\r\n`3. async await\\n`,\r\n\r\n`onscroll같이 기존에 리액트에 프레임워크에 있는걸쓰자 괜히 윈도우 건드리다 큰일날 수 있다.`,\r\n\r\n`무한스크롤!\\n`+\r\n`요소 안의 스크롤을 쓰려면 window.이벤트리스너 등록말고 해당 div 온스크롤에 등록해주자 렉심하다.\\n`+\r\n`우선 해당 엘리먼트를 document.getElementById();로 받아오기\\n`+\r\n`boxH = box.clientHeight 눈에 보이는 해당 높이\\n`+\r\n`boxST = box.scrollTop 내부전체높이\\n`+\r\n`boxSH = box.scrollHeight 스크롤 움직이는거의 높낮이.\\n`+\r\n`끝에 닿은 판정은 boxH+BoxST >= boxSH 로 판정하고\\n`+\r\n`div안쪽에 데이터를 다닥 추가하면 늘어난다.\\n`,\r\n\r\n`타입스크립트의 커스텀 훅!\\n`+\r\n`커스텀 훅의 타입 파라미터는 Generic으로 설정!\\n`+\r\n`이래야 편하게 커스텀 훅 사용 가능.\\n`+\r\n`훅은 상태관리의 영향을 받지 않아요!\\n`,\r\n\r\n`interface VALUES { [key : string] : string };\\n`+\r\n`가변길이 타입을 설정해야할 경우 string값의 키를 갖는 : 스트링!\\n`,\r\n\r\n\r\n`usecallback을써서 당장 안에 타입설정부문을 회피할 수 있다\\n`,\r\n\r\n`스크롤바 디자인\\n`+\r\n`::-webkit-scrollbar {width : 20px;}\\n`+\r\n`스크롤바의 두께\\n`+\r\n`::-webkit-scrollbar-thumb {가운데 움직이는거}\\n`+\r\n`::-webkit-scrollbar-track{배경}\\n`+\r\n`여기서는 마진 패딩이 하나도 안먹어서. background-clip : padding-box로 해놓고\\n`+\r\n`보더로 투명처리해야한다.\\n`,\r\n\r\n`background-clip\\n`+\r\n`배경이미지나 배경색을 박스 중 어디 넣을지 정하는거\\n`+\r\n`기본값 : border-box : 테두리 영역과 그 안쪽영역 채우기\\n`+\r\n`padding-box : 안쪽 여백 영역과 그 안쪽 영역 채우기\\n`+\r\n`content-box : 내용 영역과 그 안쪽 영역 채우기\\n`,\r\n\r\n`margin-top이 부모의 위까지넘치게 할땐 overflow : auto를 부모에 넣어주자\\n`,\r\n\r\n`position : apsolute는 width height가 없으면 안나온다.\\n`,\r\n\r\n`백그라운드 이미지를 이미지 파일 하나 위치지정해서 쓰고싶을땐\\n`+\r\n`background-image 말고 background로 사용하기\\n`+\r\n`top 속성일때 30px면 위에서 아래로 30px민거다.\\n`+\r\n`bottom 속성일때 30px면 아래에서 위로 30px민거다.\\n`+\r\n`이때 top과 bottom만 쓰면 나오긴 하지만 수치를 주면 사라져버린다.\\n`+\r\n`박스의 한 꼭지점을 지정하고, 각각의 수치를 주는게 정석적으로 보인다.\\n`,\r\n\r\n`렌더링을 jsx에서 참거짓으로 감싸서렌더링할수도 있지만\\n`+\r\n`css에선 display : none으로 감추거나 나올수 잇다.\\n`+\r\n`opacity : 0과 1은 자리를 차지한다.\\n`,\r\n\r\n`flasy와 truesy\\n`+\r\n`true && 뭔가 : 뭔가\\n`+\r\n`false && 뭔가 : false\\n`+\r\n`'hello' && 'bye' : 'bye'\\n`+\r\n`null && 'hello' : null\\n`+\r\n`undefined && 'hello' : undefined\\n`+\r\n`'' && 'hello' : ''\\n`+\r\n`0 && 'hello' : 0\\n`+\r\n`object && object.name 식으로 유용하게 쓴다.\\n`+\r\n`||는 뭔가 falsy하면 대체해서 내보낼 용도로 사용한다.\\n`+\r\n`앞에께 true면 뒤에껄 안본다\\n`,\r\n\r\n`비구조화 할당\\n`+\r\n`function print({a,b=2}){ } 이건 b값 없을때 대비한거\\n`+\r\n`const nickname = animal.name은\\n`+\r\n`const { name : nickname } = animal과같다\\n`+\r\n`밖에서 nickname으로 사용 가능\\n`+\r\n`배열에도 가능\\n`,\r\n\r\n`브라우저 현재 스크롤 위치\\n`+\r\n`var scrollP = document.documentElement.scrollTop;`,\r\n\r\n`브라우저 전체 높이\\n`+\r\n`var browserheight = document.documentElement.clientHeight;`,\r\n\r\n`Y축 화면에 있나 확인\\n`+\r\n`여기서 box는 해당 엘리먼트,  browser = document.documentElement\\n`+\r\n`const boxTop = box.offsetTop;\\n`+\r\n`const boxBottom = boxTop+box!.offsetHeight;\\n`+\r\n`var browserH = browser.clientHeight;\\n`+\r\n`var scrollP = browser.scrollTop;\\n`+\r\n`if( (boxTop <= browserH+scrollP)&&(boxBottom>= scrollP) )\\n`,\r\n\r\n`긴 문장... 생략처리\\n`+\r\n`overflow : hidden;\\n`+\r\n`text-overflow : ellipsis;\\n`+\r\n`white-space : nowrap;\\n`+\r\n`얘네 디폴트값들\\n`+\r\n`overflow : auto;\\n`+\r\n`text-overflow : clip;\\n`+\r\n`white-space : normal;\\n`,\r\n]\r\n// n미리 대기\r\nexport const sleep = (n : number) => new Promise((resolve)=>{    \r\n    setTimeout(()=>{\r\n        resolve('')\r\n    }, n)\r\n})\r\n\r\n\r\nexport async function getDatas(datas : datastype, num : number){\r\n    await sleep(500);\r\n    const start = num * 12;\r\n    const end = num * 12 + 12;\r\n    let newdatas : datastype = archivedata.slice(start, end);\r\n    if(archivedata.length<=end) newdatas = newdatas.concat(['end']);\r\n    return datas.concat(newdatas);\r\n}\r\n\r\nexport async function getDatasbySearch(search : string, datas : datastype, num : number){\r\n    await sleep(500);\r\n    const start = num * 12;\r\n    const end = num * 12 + 12;\r\n    const newdummy = archivedata.filter(data => data.includes(search));\r\n    let newdatas : datastype = newdummy.slice(start, end);\r\n    if(newdummy.length<=end) newdatas =  newdatas.concat(['end']);\r\n    return datas.concat(newdatas)\r\n}\r\n","import {call, put, takeLatest, takeLeading} from 'redux-saga/effects';\r\nimport * as infinityAPI from 'api/ArchiveAPI';\r\nimport { calldata, calldatasearch, CALL_DATA, CALL_DATA_ERROR, CALL_DATA_SEARCH, CALL_DATA_SUCEESS, END_CALL, resetdata, RESET_DATA } from './actions';\r\n\r\nlet count = 0;\r\n\r\nfunction* addDatasSaga(action : ReturnType<typeof calldata>){\r\n    console.log('데이터더하기사가')\r\n    try{\r\n        const datas : infinityAPI.datastype = yield call(infinityAPI.getDatas, action.datas, count);\r\n       \r\n        count = datas.length/10;\r\n\r\n        if(datas[datas.length-1]==='end'){\r\n            yield put({type : END_CALL})\r\n        }\r\n\r\n        yield put({\r\n            type : CALL_DATA_SUCEESS, data : datas\r\n        })\r\n    }catch(e){\r\n        yield put({\r\n            type : CALL_DATA_ERROR, error : e\r\n        })\r\n    }\r\n}\r\n\r\nfunction* searchDataSaga(action : ReturnType<typeof calldatasearch>){\r\n    console.log('인풋있을때')\r\n    try {\r\n        const datas : infinityAPI.datastype = yield call(infinityAPI.getDatasbySearch, action.search, action.datas, count);\r\n        console.log(datas, '변화값');\r\n        count = datas.length/10;\r\n\r\n        if(datas[datas.length-1]==='end'){\r\n            yield put({type : END_CALL})\r\n        }\r\n\r\n        yield put({\r\n            type : CALL_DATA_SUCEESS, data : datas\r\n        })\r\n    }catch(e){\r\n        yield put({\r\n            type : CALL_DATA_ERROR, error : e\r\n        })\r\n    }\r\n}\r\n\r\nfunction* resetData(action : ReturnType<typeof resetdata>){ \r\n    count = 0;     \r\n    console.log('리셋이 왔다.', count)  \r\n    try {\r\n        const datas : infinityAPI.datastype = yield call(infinityAPI.getDatasbySearch, action.search, [], count);\r\n        console.log(datas, '변화값');\r\n        count = datas.length/10;\r\n\r\n        if(datas[datas.length-1]==='end'){\r\n            yield put({type : END_CALL})\r\n        }\r\n\r\n        yield put({\r\n            type : CALL_DATA_SUCEESS, data : datas\r\n        })\r\n    }catch(e){\r\n        yield put({\r\n            type : CALL_DATA_ERROR, error : e\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport function* InfinitySaga(){\r\n    console.log('인피니티사가 등록')\r\n    yield takeLeading(CALL_DATA, addDatasSaga);\r\n    yield takeLeading(CALL_DATA_SEARCH, searchDataSaga);\r\n    yield takeLatest(RESET_DATA, resetData);\r\n}","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst FetureBlock = styled.div`\r\n    box-sizing : border-box;\r\n    border : 1px solid ${props=>props.theme.mjcolor.gitborder};\r\n    border-radius : 10px;\r\n    background-color : ${props=>props.theme.mjcolor.cosmic_siam};\r\n    opacity : 0;\r\n    &.aniclass{        \r\n        animation : fadeup 1s;\r\n        @keyframes fadeup{\r\n            from{ opacity : 0; transform : translateY(200px);}\r\n            to{opacity : 1; transform : translateY(0);}\r\n        }        \r\n\r\n        opacity : 1;\r\n    }\r\n\r\n\r\n    .imgbox{\r\n        width : 100%;      \r\n        \r\n        //비율맞추기\r\n        .imgbox-ratio{\r\n            height : 0;\r\n            padding-top : 100%;\r\n            position : relative;\r\n            //진짜 담는 빡스\r\n            .realimgcontainer{\r\n                \r\n                position : absolute;\r\n                top : 0;\r\n                left : 0;\r\n                width : 100%;\r\n                height : 100%;\r\n                img{\r\n                    width : 100%;\r\n                    height : 100%;\r\n                    max-width : 100%;\r\n                    max-height : 100%;\r\n                    padding : 10px;\r\n                    box-sizing : border-box;                    \r\n                }\r\n            }\r\n        }\r\n    }\r\n    //기술명\r\n    .techname{\r\n        width : 100%;\r\n        height : 50px;\r\n        border-top : 1px solid ${props=>props.theme.mjcolor.gitborder};\r\n        font-size : 30px;\r\n        display : flex;\r\n        justify-content : center;\r\n        align-items : center;\r\n        color : #ffffff;\r\n        box-sizing : border-box;\r\n\r\n        overflow : hidden;\r\n\r\n        @media screen and (max-width : ${props=>props.theme.mediumde}){\r\n                font-size : 24px;\r\n            }\r\n    }\r\n`;\r\n\r\ntype fetureprops = {\r\n    id : number;\r\n    name : string;\r\n}\r\n\r\nfunction Feture({id, name} : fetureprops){\r\n    const [aniclass, setaniclass] =  useState('');\r\n\r\n    useEffect(()=>{\r\n        window.addEventListener('scroll', scrollcheck);\r\n    })\r\n    const removeevent = () => {\r\n        window.removeEventListener('scroll', scrollcheck);\r\n    }\r\n\r\n    const scrollcheck = () => {\r\n        const target = document.getElementById(`feture_${id.toString()}`);\r\n        const clientRect = target?.getBoundingClientRect();\r\n        const relativeBottom = clientRect?.bottom;\r\n        const winh = window.innerHeight;\r\n        if((relativeBottom!) <= winh){\r\n            setaniclass('aniclass')\r\n            removeevent();\r\n        }\r\n    }\r\n\r\n    return(\r\n        <FetureBlock id = {`feture_${id.toString()}`} className ={aniclass}>\r\n            <div className = 'imgbox'>\r\n                <div className = 'imgbox-ratio'>\r\n                    <div className = 'realimgcontainer'>\r\n                        <img src = {`images/techs/${name}.png`} alt = {name}/>\r\n                    </div>                  \r\n                </div>\r\n            </div>\r\n            <div className = 'techname'>\r\n                {name}\r\n            </div>\r\n        </FetureBlock>\r\n    )\r\n}\r\n\r\nexport default Feture;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Feture from 'components/Feture';\r\n\r\nconst techfetures = [\r\n    { id : 1, name : 'react'}, \r\n    { id : 2, name : 'hooks'}, \r\n    { id : 3, name : 'redux'}, \r\n    { id : 4, name : 'styled-components'}, \r\n    { id : 5, name : 'typescript'}, \r\n]\r\n\r\nconst FetureBlock = styled.div`\r\n    min-width : 438px;\r\n    \r\n    text-align : center;\r\n    margin-top : 20px;\r\n    padding-bottom : 50px;\r\n    overflow : auto;\r\n    overflow-y : hidden;\r\n    border-bottom : 1px solid ${props=>props.theme.mjcolor.gitborder};\r\n    \r\n    position : relative;\r\n\r\n    .inner{\r\n        margin-top : 40px;\r\n        //margin-top : 520px;\r\n        .fetures-title{\r\n            position: relative;  \r\n            line-height : 1.5;                    \r\n        }\r\n\r\n        ul{\r\n            margin-top : 40px;\r\n            font-size : 0px;\r\n            li{                \r\n                display : inline-block;\r\n                vertical-align : top;\r\n                width : 32%;\r\n                \r\n                @media screen and (max-width : ${props=>props.theme.smallde}){\r\n                    width : 47%;   \r\n                    &:nth-child(3n+1){\r\n                        margin-left : 2px;                    \r\n                    }                 \r\n                    &:nth-child(2n+1){\r\n                        margin-left : 0px;\r\n                    }\r\n                }\r\n                \r\n                &+li{\r\n                    margin-left : 2px;\r\n                }\r\n                &:nth-child(3n+1){\r\n                    margin-left : 0px;                    \r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nfunction FetureContainer(){\r\n    return(\r\n        <FetureBlock id = 'FetureContainerbox'>\r\n            <div className = 'inner'>\r\n                <div className = 'fetures-title mj-title --librarytitle'>\r\n                    SKILL STACKS\r\n                </div>                \r\n                <ul id = 'fetures' className = 'clearfix'>\r\n                    {techfetures.map(feture => { return (\r\n                        <li><Feture  key ={feture.id} id = {feture.id} name = {feture.name}/></li>\r\n                    )})}\r\n                </ul>\r\n            </div>\r\n        </FetureBlock>\r\n    )\r\n}\r\n\r\nexport default FetureContainer;","import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport {BiPhoneIncoming, BiMailSend} from 'react-icons/bi'\r\n\r\nconst FooterBlock = styled.div`\r\n    background-color : ${props=>props.theme.mjcolor.gitbackground};\r\n    margin-top : 50px;\r\n    padding-top : 30px;\r\n    border-top : 1px solid ${props=>props.theme.mjcolor.gitborder};\r\n    \r\n    min-width : 438px;\r\n\r\n    \r\n    @media screen and (max-width : ${props=>props.theme.smallde}){\r\n        padding-top : 0px;                 \r\n        }\r\n    .inner{\r\n        .footertitle{\r\n            margin-top : 40px;\r\n            margin-bottom : 30px;\r\n            text-align : center;\r\n            line-height : 1.5;\r\n            position : relative;\r\n            \r\n        }\r\n        .contentbox{\r\n            margin-top : 20px;\r\n            font-size : 28px;\r\n            line-height : 1.2;\r\n\r\n            color : ${props=>props.theme.mjcolor.mjblack};\r\n\r\n            @media screen and (max-width : ${props=>props.theme.smallde}){\r\n                font-size : 24px;\r\n                .float--left{\r\n                    float : none;\r\n                    text-align : center;\r\n                    border-top : 1px solid ${props=>props.theme.mjcolor.gitborder}\r\n                }\r\n                .float--right {\r\n                    float : none;\r\n                    text-align : center;\r\n                    border-top : 1px solid ${props=>props.theme.mjcolor.gitborder}\r\n                }\r\n            }\r\n            .info-title{\r\n                text-align : center;\r\n                color : ${props=>props.theme.mjcolor.grayfont};\r\n                font-size : 24px;\r\n                @media screen and (max-width : ${props=>props.theme.smallde}){\r\n                    font-size : 20px;                    \r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nfunction FooterContainer(){\r\n\r\n    return(\r\n        <FooterBlock id = 'FooterContainerbox'>\r\n            <div className = 'inner '>\r\n                <div className = 'footertitle mj-title --librarytitle'>CONTACT ME</div>\r\n                <div className = 'contentbox clearfix'> \r\n                    <div className = 'phone float--left'>\r\n                        <div className = 'info-title'>phone-number<BiPhoneIncoming/></div>\r\n                        010-9151-0393\r\n                    </div>\r\n                    <div className = 'email float--right'>\r\n                        <div className = 'info-title'>mail-address<BiMailSend/></div>\r\n                        mjlee994@gmail.com\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </FooterBlock>\r\n    )\r\n}\r\n\r\nexport default FooterContainer;","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Headertoblock = styled.div<{boxname :string}>`    \r\n    position : relative;\r\n    .tobtn{        \r\n        width : 80px; height : 30px;\r\n        overflow : hidden;\r\n        border : 1px solid #bdb2ff;        \r\n        cursor: pointer;\r\n        border : 2px solid #000;\r\n        border-radius : 3px;\r\n        \r\n        @media screen and  (max-width : ${props=>props.theme.smallde}){\r\n            width : 60px; height : 20px;\r\n        }\r\n        \r\n        :hover::before{\r\n            content : '';\r\n            position : absolute;\r\n            left : 0;\r\n            top : 0;\r\n            width : 100%;\r\n            height : 100%;\r\n            background-color : ${props=>props.theme.mjcolor.cursurbackground};\r\n        }\r\n    }\r\n    .onbrowser{\r\n        background : linear-gradient(to bottom,#b2f2bb, #40c057);\r\n           \r\n    }\r\n    .notonbrowser{\r\n        background : linear-gradient(to bottom,#f03e3e, #ffc9c9);\r\n    }\r\n    :hover::before{\r\n        ${props => `content : '${props.boxname}'`};\r\n        position : absolute;\r\n        left : 50%;\r\n        top : 100%;\r\n        //width : 100%;\r\n        background-color : ${props=>props.theme.mjcolor.gitbackground};\r\n        transform : translateX(-50%);\r\n        font-size : 18px;\r\n    }\r\n    &+&{\r\n        margin-left : -2px;\r\n    }\r\n`\r\n\r\nfunction convert(boxname : string) : string{\r\n    switch(boxname){\r\n        case 'SummaryContainer' : return 'start';\r\n        case 'FetureContainer' : return 'skills';\r\n        case 'InfinityContainer' : return 'archive';\r\n        case 'IntroContainer' : return 'introduce';\r\n        case 'FooterContainer' : return 'end';\r\n        default : return 'x';\r\n    }\r\n}\r\n\r\ntype headertoprops = {id : number, boxname : string, toscroll : (to:number)=>void}\r\n\r\nfunction HeaderTo({id, boxname, toscroll} : headertoprops){\r\n    const [onBrowser, setonBrowser] = useState(false);\r\n\r\n    let box : HTMLElement | null = null;\r\n    const browser = document.documentElement;\r\n    useEffect(()=>{\r\n        //while(!box){\r\n            box = document.getElementById(boxname.concat('box'));\r\n        //}\r\n        window.addEventListener('scroll', isOnBrowser);\r\n        window.addEventListener('resize', isOnBrowser);\r\n    },[])    \r\n\r\n    const isOnBrowser = () =>{        \r\n        const boxTop = box!.offsetTop;\r\n        const boxBottom = boxTop+box!.offsetHeight;             \r\n        var browserH = browser.clientHeight;\r\n        var scrollP = browser.scrollTop;\r\n        if( (boxTop <= browserH+scrollP)&&(boxBottom>= scrollP+100) ){\r\n            setonBrowser(true);\r\n            return;\r\n        }\r\n        setonBrowser(false);\r\n    }\r\n\r\n    const onClick = () =>{     \r\n        toscroll(document.getElementById(boxname.concat('box'))!.offsetTop-100);               \r\n    }\r\n\r\n    return(\r\n        <Headertoblock boxname = {convert(boxname)} className = 'float--left'>\r\n            <div onClick = {onClick} className = {`tobtn ${onBrowser ? 'onbrowser' : 'notonbrowser'}`}></div>\r\n        </Headertoblock>\r\n    )\r\n}\r\nexport default HeaderTo;","import HeaderTo from 'components/HeaderTo';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst HeaderBlock = styled.div`\r\n    width : 100%;\r\n    min-width : 438px;\r\n    height : 100px;\r\n    position : fixed;\r\n    top : 0;\r\n    background-color : ${props=>props.theme.mjcolor.hoverclosebackground};\r\n\r\n    z-index : 500;\r\n\r\n    box-shadow : inset 0 -10px 10px rgba(0,0,0,0.2);\r\n\r\n    .inner{\r\n        height : 100%;\r\n    //왼쪽\r\n     .headerleft{      \r\n        .logo{\r\n            background : url('./mjlogo.png');\r\n            background-size : 80px;\r\n            width : 80px;\r\n            height : 80px;\r\n            margin : 10px;\r\n            position : relative;\r\n            text-indent : -9999px;\r\n            :hover{\r\n                cursor: pointer;\r\n                ::before{\r\n                    content : '';\r\n                    position : absolute;\r\n                    top : 0; left : 0; width : 100%; height : 100%;\r\n                    background-color : ${props=>props.theme.mjcolor.cursurbackground};\r\n                }\r\n            }\r\n        }        \r\n    }\r\n    //제목\r\n    .header-title{\r\n        display : inline-flex;\r\n        float : left;\r\n        height : 100%;        \r\n        align-items : center;\r\n        margin-left : 20px;\r\n        @media screen and  (max-width : 605px){\r\n            display : none;\r\n        }\r\n    }\r\n    //오른쪽\r\n     .headerright{  \r\n        &.btnbox{                      \r\n            height : 100%;\r\n            display : inline-flex;\r\n            align-items : center;\r\n            .inbox{\r\n                //background-color : gray;\r\n                box-shadow : 0 0 10px #bdb2ff;\r\n            }\r\n        }\r\n\r\n    }\r\n    }\r\n`\r\nfunction HeaderContainer(){\r\n\r\n    const toscroll = (to : number) =>{     \r\n        window.scrollTo(0, to);        \r\n    }\r\n    const reloada = ()=>{\r\n        window.location.reload();\r\n    }\r\n\r\n    return(\r\n        <HeaderBlock className = 'clearfix'>\r\n            {/* 왼쪽부분 */}\r\n          <div className = 'inner clearfix'>\r\n\r\n            <div className = 'headerleft float--left'>\r\n                <div  onClick = {reloada} className = 'logo'><a href = '#'>MJ허브</a></div>                \r\n            </div>\r\n            <div className = 'header-title float--left'>\r\n                <div className = 'header-title-inbox'>MJ허브</div>\r\n            </div>\r\n            {/* 오른쪽부분 */}\r\n            <div className = 'headerright btnbox float--right'>\r\n                <div className = 'inbox clearfix'>\r\n                <HeaderTo toscroll = {toscroll} key = {1} id = {1} boxname = 'SummaryContainer'/>\r\n                <HeaderTo toscroll = {toscroll} key = {2} id = {2} boxname = 'FetureContainer'/>\r\n                <HeaderTo toscroll = {toscroll} key = {3} id = {3} boxname = 'InfinityContainer'/>\r\n                <HeaderTo toscroll = {toscroll} key = {4} id = {4} boxname = 'IntroContainer'/>\r\n                <HeaderTo toscroll = {toscroll} key = {5} id = {5} boxname = 'FooterContainer'/>\r\n                </div>\r\n            </div>\r\n\r\n            </div>\r\n        </HeaderBlock>\r\n    )\r\n}\r\n\r\nexport default HeaderContainer;","import { RootState } from 'modules';\r\nimport { calldata, resetdata, calldatasearch } from 'modules/infinityscroll';\r\nimport React, { useEffect,useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport {GiHamburgerMenu} from 'react-icons/gi';\r\n\r\nconst Infiniteblock = styled.div`\r\n    background-color : ${props=>props.theme.mjcolor.gitbackground};\r\n    border-bottom : 1px solid ${props=>props.theme.mjcolor.gitborder};\r\n    padding-top : 30px;\r\n    padding-bottom : 30px;\r\n    overflow : auto;\r\n    min-width : 438px;\r\n    .inner{\r\n        \r\n        overflow : auto;\r\n        position : relative;\r\n        background-color : ${props=>props.theme.mjcolor.cosmic_siam};\r\n        box-sizing : border-box;        \r\n        \r\n    //제목\r\n    .infinity-title{\r\n        overflow : auto;\r\n        position : relative;\r\n        font-size : 50px;\r\n        text-align : center;\r\n        color : ${props=>props.theme.mjcolor.librarytitle};\r\n        text-shadow : 0 0 10px #ffff00;\r\n        \r\n        @media screen and (max-width : ${props=>props.theme.smallde}){\r\n            font-size : 30px;\r\n        }\r\n        .title-top{\r\n            position : absolute;\r\n            top : 0;\r\n            width : 100%;\r\n            height : 29px;\r\n            background : url('images/띠2.jpg') left top;            \r\n        }\r\n        .title-content{\r\n            margin-top : 29px;\r\n            margin-bottom : 29px;\r\n            background : url('images/띠2.jpg') no-repeat left top -29px;\r\n        }\r\n        .title-bottom{            \r\n            position : absolute;\r\n            bottom : 0;\r\n            width : 100%;\r\n            height : 29px;\r\n            background : url('images/띠2.jpg') left bottom;\r\n        }\r\n    }\r\n    //짧은 설명과 버튼\r\n    .infinity-description{\r\n        font-size : 16px;\r\n        text-align : center;\r\n        line-height : 1.5;\r\n        color : ${props=>props.theme.mjcolor.grayfont};\r\n\r\n        overflow-y : hidden;\r\n\r\n        .toggle-btn{\r\n            position : relative;\r\n            width : 30px;\r\n            height : 30px;\r\n            margin : 0 auto;\r\n            font-size : 30px;\r\n            line-height : 1;\r\n            \r\n\r\n            :hover::before{\r\n                content : '';\r\n                position : absolute;\r\n                top : -10%; left : -10%;\r\n                width : 120%;\r\n                height : 120%;\r\n                border-radius : 50%;\r\n                background-color : ${props=>props.theme.mjcolor.cursurbackground};\r\n                cursor: pointer;\r\n            }\r\n        }\r\n    }\r\n    //인풋\r\n    #searchinput{\r\n        width : 300px;\r\n        display : block;\r\n        margin : 0 auto;\r\n        margin-top : 10px;\r\n        margin-bottom : 10px;\r\n    }\r\n    //무한스크롤박스\r\n    #infinitebox{\r\n        //width : 100%;\r\n        height : 400px;\r\n        overflow-y : scroll;\r\n        background-color : ${props=>props.theme.mjcolor.zinmuk};\r\n        color  : ${props=>props.theme.mjcolor.grayfont};\r\n        box-sizing : border-box;\r\n\r\n        white-space : pre-wrap;\r\n        word-break : break-all;\r\n\r\n        margin-right : 10px;\r\n        margin-left : 10px;\r\n        margin-bottom : 20px;\r\n        font-size : 30px;\r\n        text-align : left;        \r\n\r\n        @media screen and (max-width : ${props=>props.theme.mediumde}){\r\n                font-size : 25px;\r\n            }\r\n        @media screen and (max-width : ${props=>props.theme.smallde}){\r\n                font-size : 20px;\r\n            }\r\n        ///로딩중///\r\n        .loadingbox{\r\n            display : block;\r\n            margin-top : 5px;\r\n            text-align : center;\r\n            img{ display : block; margin : 0 auto}\r\n        }\r\n        ///스크롤바///\r\n        ::-webkit-scrollbar {\r\n            width : 10px;            \r\n        }\r\n        ::-webkit-scrollbar-thumb {\r\n            background-color : #2f3542;\r\n            background-clip : padding-box;\r\n\r\n            border-radius : 4px;\r\n            border-left : 1px solid transparent;\r\n            border-right : 1px solid transparent;\r\n        }\r\n        ::-webkit-scrollbar-track{\r\n            //box-sizing : border-box;\r\n            border-radius : 5px;\r\n            background-color : ${props=>props.theme.mjcolor.grayfont};\r\n        }\r\n    }    \r\n    .notopen{\r\n        text-align : center;\r\n        color : ${props=>props.theme.mjcolor.grayfont};\r\n        font-size : 16px;\r\n        line-height : 1.5;\r\n        overflow-y : hidden;\r\n    }\r\n}\r\n`\r\n\r\nfunction InfiniteContainer(){   \r\n    \r\n    const {loading, data, error, end} = useSelector((state:RootState)=>state.infinityreducer);\r\n    const dispatch = useDispatch();\r\n\r\n    const [search, setinput] = useState('');\r\n    const [toggle, settogle] = useState(false);\r\n\r\n    const onChange = (e : React.ChangeEvent<HTMLInputElement>) => {\r\n        setinput(e.target.value);        \r\n        dispatch(resetdata(data!, e.target.value));\r\n    }\r\n    const onToggle = () => {\r\n        settogle(!toggle);\r\n        setinput('');\r\n        if(!toggle) dispatch(resetdata(data!, search));\r\n    }\r\n/////////무한스크롤용 함수/////////////////////////////\r\n    const infinityScroll = (e : React.UIEvent<HTMLDivElement>) =>{  \r\n        const box = document.getElementById('infinitebox');        \r\n        const boxH = box!.clientHeight; // 눈에 보이는 네모\r\n        const boxST = box!.scrollTop; // 내부 전체높이\r\n        const boxSH = box!.scrollHeight; //스크롤 움직이는거의 높낮이\r\n             //끝에 닿았으면?//그리고 데이터 끝이 아니면\r\n        if((boxH+boxST+10 >= boxSH) && !end){\r\n            search ? dispatch(calldatasearch(search, data!)) : dispatch(calldata(data!));\r\n        }\r\n    }\r\n    ///////////////////////////////무한스크롤용함수\r\n\r\n\r\n\r\n    useEffect(()=>{        \r\n        dispatch(calldata([]));\r\n    },[])\r\n\r\n    //if(error) return <div>에러!!</div>;\r\n    //if(!data) return <div>아직없음</div>\r\n\r\n\r\n    return (\r\n            <Infiniteblock id = 'InfinityContainerbox'>\r\n                {(!error && data) ? (\r\n                <div className = 'inner'>\r\n                <div className = 'infinity-title'>\r\n                    <div className = 'title-top'/>\r\n                    <div className = 'title-content'>MJ 아카이브</div>\r\n                    <div className = 'title-bottom'/>\r\n                </div>\r\n                <div className = 'infinity-description'>\r\n                    겪은 경험을 기록하는 저장소<br/>\r\n                    <div onClick = {onToggle} className = 'toggle-btn'>\r\n                    <GiHamburgerMenu/>\r\n                    </div>\r\n                </div>\r\n            {toggle ? \r\n                <div>\r\n            <input onChange = {onChange} id = 'searchinput' className = '--text' value = {search} placeholder = '검색어를 입력해주세요'/>\r\n            <div id = 'infinitebox' onScroll = {infinityScroll}>\r\n                \r\n            {data ? data.map(data => {return <>{data}<br/></>}) : '없음'}   \r\n            {loading ?\r\n                <div className = 'loadingbox'>\r\n                    <img src = './images/loading/loading.gif'/>\r\n                    데이터를 찾는 중입니다.\r\n                </div> \r\n                    : ''}         \r\n            {end ? <div className = 'loadingbox'>\r\n                    <img src = './images/loading/nomore.gif'/>\r\n                    데이터가 더 없습니다!\r\n                </div> \r\n                    : ''}     \r\n            {!end && !loading ? <div className = 'loadingbox'>\r\n                    <img src = './images/loading/nextpage.gif'/>\r\n                    다음페이지!\r\n                </div> \r\n                    : ''}\r\n            </div>\r\n                </div>\r\n            : <div className = 'notopen'>메뉴를 클릭해주세요</div>}\r\n            </div>\r\n\r\n                ) : '에러!!'}\r\n            </Infiniteblock>\r\n    )\r\n}\r\n\r\nexport default InfiniteContainer;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst IntrocomponentBlock = styled.div`\r\n    width : 100%;\r\n\r\n    .intro-title{\r\n        cursor: pointer;\r\n        border-bottom : 2px solid ${props=>props.theme.mjcolor.gitborder};\r\n        padding-left : 20px;\r\n        line-height : 1.5;\r\n        font-size : 32px;\r\n\r\n        overflow : hidden;\r\n        text-overflow : ellipsis;\r\n        white-space : nowrap;\r\n\r\n        @media screen and (max-width : ${props=>props.theme.mediumde}){\r\n            font-size : 28px;\r\n        }\r\n        @media screen and (max-width : ${props=>props.theme.smallde}){\r\n            font-size : 24px;\r\n        }\r\n        &.closed{\r\n            :hover{\r\n                background-color : ${props=>props.theme.mjcolor.hoveractivebackground};\r\n            }\r\n        }\r\n        &.opened {\r\n            background-color : ${props=>props.theme.mjcolor.hoveractivebackground};\r\n            color : #364fc7;\r\n\r\n            overflow : auto;\r\n            text-overflow : clip;\r\n            white-space : normal;\r\n            :hover {\r\n                background-color : ${props=>props.theme.mjcolor.hoverclosebackground};\r\n            }\r\n        }\r\n    }\r\n    .intro-content{\r\n        //width : 100%;\r\n        height : 0;\r\n        overflow : hidden;      \r\n        padding : 0 40px 0;\r\n\r\n        font-size : 24px;\r\n        line-height : 1.2;\r\n        color : ${props=>props.theme.mjcolor.mjblack};\r\n        background-color : ${props=>props.theme.mjcolor.gitbackground};\r\n        box-shadow: inset 0px -10px 20px rgba(200,200,200,0.4);\r\n        white-space : pre-wrap;\r\n        word-break : break all;\r\n        \r\n        @media screen and (max-width : ${props=>props.theme.mediumde}){\r\n            font-size : 20px;\r\n        }\r\n        @media screen and (max-width : ${props=>props.theme.smallde}){\r\n            font-size : 18px;\r\n        }\r\n        &.closed{\r\n            height : 0;\r\n            transition : all .3s;\r\n        }\r\n\r\n        &.opened {\r\n            height : auto;\r\n            transition : all .3s;\r\n            padding : 40px 40px 45px;\r\n\r\n            border-bottom : 2px solid ${props=>props.theme.mjcolor.gitborder};\r\n        }\r\n    }\r\n`;\r\ntype introtype = {\r\n    id : number,\r\n    title : string,\r\n    content : string,\r\n    onopen : string\r\n    onReset : () => void,\r\n    onOpen : (id : number) => void,\r\n    onClose : (id : number) => void,\r\n}\r\nfunction Intro({id, title, content, onopen, onReset, onOpen, onClose} : introtype){\r\n    const onToggle = () => {\r\n        (onopen === 'closed') ? openintro() : closeintro();\r\n    }\r\n    const openintro = () =>{\r\n        onReset();\r\n        onOpen(id);\r\n    }\r\n    const closeintro = () =>{\r\n        onClose(id);\r\n    }\r\n    return(\r\n        <IntrocomponentBlock>\r\n            <div className = {`intro-title ${onopen}`} onClick = {onToggle} >{title}</div>\r\n            <div className = {`intro-content ${onopen}`}>{content}</div>\r\n        </IntrocomponentBlock>\r\n    )\r\n}\r\n\r\nexport default Intro;","import Intro from 'components/Intro';\r\nimport React, { useReducer } from 'react';\r\nimport styled from 'styled-components';\r\n\r\ntype introtype = {id : number, title : string, content : string, onopen : string }\r\ntype introstype = introtype[]\r\nconst introcontents : introstype = [\r\n    {\r\n        id : 1,\r\n        title : '왜 React, 프론트엔드인가?',\r\n        content : '최초로 Front-End를 선택하게 된 계기는 간단했습니다. 단순히 어떤 사이트를 이용하다가 나도 이런 사이트를 만들어보고 싶다는 생각이 들었습니다. 막연히 근처 서점에서 html, jsp책을 사서 웹에 대한 공부를 하였고, 그렇게 어느 정도 기초를 다졌습니다. 그러다가 사이트를 이루는 데이터분야에 빠져서 잠깐 mysql과 같은 데이터 관련 언어를 공부하기도 했습니다. 본격적으로 공부를 시작하기 위해 패스트캠퍼스에서 강의를 하나 구매하기로 했습니다. 기왕 하는김에 프레임워크를 이용해 이전에 미흡했던 js와 html을 보충하기 위해 리액트 강의를 구매하고 공부하였습니다. 그러다가 리액트, 리덕스와 미들웨어의 연계와, 체계적인 구조를 익히게 되고나서부턴 완전히 이쪽에 익숙해졌습니다. 그리고 앞으로의 취업방향도 확실히 Front-End로 정하게 되었습니다.',\r\n        onopen : 'closed',\r\n    },\r\n    {\r\n        id : 2,\r\n        title : '프론트엔드 공부 과정에서 가장 가치있던 일',\r\n        content : '강의로 이론과, 구조를 쌓아올리는 토대를 익혔습니다. 허나 막상 맨바닥에서 페이지를 하나 만들자니 막막한 기분이였습니다. 다른 개발자들의 조언을 듣고, 페이지를 하나 클론코딩했습니다. 정말 이론을 아는것과 달리, 실제로 해당 페이지를 만들자니 온갖 오류와, 이건 어떻게 해야하지? 하는 문제에 부딪히게 되었습니다. 그것들을 실제로 방법을 찾고, 적용해서 쌓아나간 그 경험과 지식의 축적이 가장 가치있던 경험이였습니다.',\r\n        onopen : 'closed',\r\n    },\r\n    {\r\n        id : 3,\r\n        title : '개발자라는 직군을 선택한 이유',\r\n        content : '어린 시절부터 컴퓨터로 하는 일을 좋아했습니다. 뭔가 행동을 하면 그에 반응하는 것과, 그 틀을 만들어가는 프로그래밍도 좋아했습니다. 그 결과가 바로바로 화면에 보이는 프론트엔드는 그런 측면에서 도전해볼 가치가 있었고, 이 분야의 개발자를 선택하게 되었습니다.',\r\n        onopen : 'closed',\r\n    },\r\n    {\r\n        id : 4,\r\n        title : 'JS? TS?',\r\n        content : '사실 자바스크립트를 익히게 된지는 오래 되지 않았습니다. 공부하며 든 생각은, 다른 언어들에 비해 파이썬과 같이 형 지정없이 변수, 함수 등을 선언해서 사용하는 것이 분명히 대규모 프로젝트에선 문제가 생길거라고 생각했습니다. 그러던 와중에 추가로 배우게 된 타입스크립트라는걸 알게 되자마자 이걸 사용하자고 마음먹게 되었습니다. 그로 인해 이것저것 오류가 터지고, 추가 시간이 걸리게 되었지만, 형태를 꽉 잡아준다는 이유 하나만으로 타입스크립트를 선호하게 되었습니다.',\r\n        onopen : 'closed',\r\n    },\r\n    {\r\n        id : 5,\r\n        title : 'etc',\r\n        content : '앞으로는 프론트엔드 기술을 더 숙달해가며, 백엔드 기술도 기초부터 익혀갈 예정입니다.',\r\n        onopen : 'closed',\r\n    },\r\n]\r\n//자기소개 내용들\r\ntype actiontype = \r\n    | {type : 'RESET_TOGGLE'}\r\n    | {type : 'OPEN_TOGGLE', id : number}\r\n    | {type : 'CLOSE_TOGGLE', id : number}\r\nfunction reducer(state : introstype, action : actiontype) : introstype{    \r\n    switch (action.type){\r\n        case 'RESET_TOGGLE' : {          \r\n            return state.map(intro => {return {...intro, onopen : 'closed', }});\r\n        }\r\n        case 'OPEN_TOGGLE' :{\r\n            return state.map(intro => {\r\n                return (intro.id === action.id) ? {...intro, onopen : 'opened'} : intro;\r\n            });\r\n        }\r\n        case 'CLOSE_TOGGLE' : {            \r\n            return state.map(intro=>{\r\n                return (intro.id === action.id) ? {...intro, onopen : 'closed'} : intro;\r\n            });\r\n        }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nconst IntroBlock = styled.div`\r\n    margin-top : 60px;\r\n    min-width : 438px;\r\n    .inner{\r\n        .intros-title{   \r\n            text-align : center;   \r\n            position : relative;\r\n            line-height : 1.5;\r\n        }\r\n        .intros{\r\n            margin-top : 60px;\r\n            border-top : 2px solid ${props=>props.theme.mjcolor.gitborder};\r\n        }\r\n    }\r\n`;\r\n\r\nfunction IntroContainer(){\r\n    const [Intros, dispatch] = useReducer(reducer, introcontents);\r\n    const onReset = () => {dispatch({type :'RESET_TOGGLE'})}\r\n    const onOpen = (id : number) => {dispatch({type : 'OPEN_TOGGLE', id : id})}\r\n    const onClose = (id : number) => {dispatch({type : 'CLOSE_TOGGLE', id : id})}\r\n\r\n    return(\r\n        <IntroBlock id = 'IntroContainerbox'>\r\n            <div className = 'inner'>\r\n                <div className = 'intros-title mj-title --librarytitle'>\r\n                    ABOUT ME\r\n                </div>\r\n                <div className = 'intros'>\r\n                    {Intros.map(intro => {\r\n                        return(\r\n                            <Intro key ={intro.id} id = {intro.id} title = {intro.title} content = {intro.content} onopen = {intro.onopen}\r\n                                        onReset = {onReset} onClose = {onClose} onOpen = {onOpen}/>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>            \r\n        </IntroBlock>\r\n    )\r\n}\r\n\r\nexport default IntroContainer;\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\n//타이핑 애니메이션 컴포넌드.\r\nconst TypingBlock = styled.div<{animeid : string}>`\r\n        display : inline-block;\r\n\r\n        white-space : pre-wrap;\r\n        word-break : break-all;        \r\n\r\n        ${props => `.makecursor-${props.animeid}`}{\r\n            display : inline;   \r\n            font-weight : 100;     \r\n            animation-name : mjcursor;\r\n            animation-duration : 0.5s;\r\n            animation-iteration-count : infinite;\r\n            @keyframes mjcursor{\r\n                0%{color : transparent}\r\n                50%{color : #000000}\r\n                100%{color :  transparent}\r\n            }\r\n        }\r\n`;\r\n\r\ntype typingProps = {\r\n    id : number,\r\n    contents : string,\r\n}\r\n\r\nfunction TypingAnime({id, contents} : typingProps){\r\n    const [typetext, settypetext] = useState('');\r\n    let typingIdx = 0;\r\n    let typingtxt = contents.split('');\r\n\r\n    useEffect(()=>{        \r\n            setInterval(typing, 100);       \r\n    },[])\r\n    let thread = '';\r\n    const typing = () => {\r\n        if(typingIdx<typingtxt.length){\r\n            thread = thread.concat(typingtxt[typingIdx]);\r\n            settypetext(thread);\r\n            typingIdx++; \r\n          } else{ \r\n            clearInterval();\r\n          }\r\n    }\r\n    return(\r\n        <TypingBlock className = {`typinganime-${id.toString()}`} animeid = {id.toString()}>\r\n            {typetext}\r\n            <div className = {`makecursor-${id.toString()}`}>|</div>      \r\n        </TypingBlock>\r\n    )\r\n}\r\n\r\nexport default TypingAnime;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport 'font/fonts.css';\r\nimport TypingAnime from 'components/TypingAnime';\r\n\r\nconst summaries = {\r\n    mjtitle : '안녕하세요\\n'\r\n              + '신입 프론트엔드 개발자 이명재입니다',\r\n    mjdescription : '이 페이지는 React, styled-conmponents로 이루어져 있습니다.'\r\n}\r\n\r\nconst SummaryBlock = styled.div`\r\n    position : relative;\r\n    width : 100%;\r\n    min-width : 438px;\r\n    background-color : ${props=>props.theme.mjcolor.gitbackground};\r\n    margin-top : 100px;\r\n    font-family : 'cookie';    \r\n    border-bottom : 1px solid ${props=>props.theme.mjcolor.gitborder};\r\n    box-sizing : border-box;\r\n    .inner{     \r\n        padding : 30px 0;\r\n        .--title{\r\n            @media screen and (max-width : ${props=>props.theme.mediumde}){\r\n                font-size : 45px;\r\n            }\r\n            @media screen and (max-width : ${props=>props.theme.smallde}){\r\n                font-size : 30px;\r\n            }\r\n            \r\n        }\r\n        .--description{\r\n            color : ${props=>props.theme.mjcolor.grayfont};\r\n            @media screen and (max-width : ${props=>props.theme.mediumde}){\r\n                font-size : 27px;\r\n            }\r\n            @media screen and (max-width : ${props=>props.theme.smallde}){\r\n                font-size : 20px;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nfunction SummaryContainer(){\r\n    return(\r\n        <SummaryBlock  id = 'SummaryContainerbox' >\r\n            <div className = 'inner'>\r\n                <div className = 'anime --title'>\r\n                    <TypingAnime id = {1} contents = {summaries.mjtitle}/>                    \r\n                </div>                \r\n                <div className = 'anime --description'>\r\n                    <br/>\r\n                    <TypingAnime id = {2} contents = {summaries.mjdescription}/>                    \r\n                </div>\r\n            </div>\r\n        </SummaryBlock>\r\n    )\r\n}\r\n\r\nexport default SummaryContainer;","import React from 'react';\r\nimport styled from 'styled-components'\r\nimport '../font/fonts.css'\r\nimport FetureContainer from './FeatureContainer';\r\nimport FooterContainer from './FooterContainer';\r\nimport HeaderContainer from './HeaderContainer';\r\nimport InfiniteContainer from './InfiniteContainer';\r\nimport IntroContainer from './IntroContainer';\r\nimport SummaryContainer from './SummaryContainer';\r\n\r\nconst BodyContainterBlock = styled.div`\r\n    font-family : 'exile', 'cookie';\r\n    font-size : 16px;\r\n    font-weight : 400;\r\n    color : #333;\r\n`;\r\n\r\nfunction BodyContatiner(){\r\n    return (\r\n        <BodyContainterBlock>\r\n           <HeaderContainer></HeaderContainer> \r\n           <SummaryContainer></SummaryContainer>    \r\n           <FetureContainer></FetureContainer>\r\n           <InfiniteContainer></InfiniteContainer>\r\n           <IntroContainer></IntroContainer>      \r\n           <FooterContainer></FooterContainer>\r\n        </BodyContainterBlock>\r\n    )\r\n}\r\nexport default BodyContatiner;","import BodyContatiner from 'containers/BodyContainer';\nimport './App.css';\n\nfunction App() {\n  return (\n    <>\n      <BodyContatiner/>      \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createGlobalStyle} from 'styled-components';\r\nimport reset from 'styled-reset';\r\nimport 'font/fonts.css';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    ${reset}\r\n    body{\r\n        font-size : 30px;\r\n        font-family : 'cookie';\r\n    }\r\n    ////버튼용///////////////////\r\n    .btn{\r\n        //width : 300px\r\n        height : 34px;\r\n        background : #eee linear-gradient(to bottom, #fcfcfc, #eee);\r\n        border : 1px solid #d5d5d5;\r\n        border-radius : 4px;\r\n\r\n        display : flex;\r\n        align-items: center;\r\n        //justify-content : center;\r\n        padding : 0 12px;\r\n\r\n        font-size : 14px;\r\n        font-weight : 500;\r\n        line-height : 1.5;//행간격\r\n        cursor : pointer;\r\n        box-sizing : border-box;\r\n        position : relative;\r\n\r\n        color : #333;\r\n        \r\n        :hover::before{\r\n            content : '';\r\n            position : absolute;\r\n            top : 0;\r\n            left : 0;\r\n            width : 100%;\r\n            height : 100%;\r\n            background : rgba(0,0,0,0.07);\r\n        }\r\n\r\n        &.--primary{\r\n            border : 1px solid #65b836;\r\n            color : #fcfcfc;\r\n            background : #55a532 linear-gradient(#91dd70,#55ae2e);\r\n        }\r\n    }\r\n    ///////////////인풋용////////////////////////\r\n    input{\r\n        &.--text{\r\n            height : 34px;\r\n            padding : 0 10px;\r\n            box-sizing : border-box;\r\n            border : 1px solid #ddd;\r\n            border-radius : 5px;\r\n\r\n            outline : none;\r\n            box-shadow : inset 0 1px 2px rgba(0,0,0,0.075);\r\n\r\n            font-size : 16px;\r\n\r\n            :focus {\r\n                border-color : #51a7e8;\r\n                box-shadow : inset 0 1px 2px rgba(0,0,0,0.075), \r\n                            0 0 5px rgba(81,167,232, 0.5);\r\n            }\r\n            ::placeholder{\r\n                color : #cacaca;\r\n            }\r\n        }\r\n    }\r\n    /////////////a용 a href 용/////////////////\r\n    a{\r\n        text-decoration : none;\r\n    }\r\n    ////////float clearfix 클리어픽스용////////    \r\n    .clearfix::after{\r\n                content : '';\r\n                clear : both;\r\n                display : block;\r\n    }\r\n    .float--left{\r\n        float : left;\r\n    }\r\n    .float--right{\r\n        float : right;\r\n    }\r\n    //////////////서머리! summary////////////////////////\r\n    .summary{\r\n        flex-grow : 1;\r\n        flex-basis : 0;\r\n        margin-right : 90px;\r\n        //background : red;\r\n\r\n        &.__title{\r\n            //background : red;\r\n            font-size : 38px;\r\n            font-weight : 300;\r\n            line-height : 1.25;\r\n            margin-bottom : 18px;\r\n        }\r\n        &.__description{\r\n            //background : blue;\r\n            font-size : 26px;\r\n            font-weight : 300;\r\n            line-height : 1.5;\r\n        }\r\n    }\r\n    //////////////깃허브식 이너 inner 가운데 모으기 div/////////\r\n    .inner{\r\n        max-width : 980px;\r\n        margin : 0 auto;\r\n        box-sizing : border-box;\r\n        position : relative;\r\n        font-size : 50px;\r\n    }\r\n    /////////////////제목과 설명////////////////////\r\n    .--title{\r\n        font-size : 54px;\r\n        font-weight : 400;\r\n        line-height : 1.25;\r\n\r\n    }\r\n    .--description{\r\n        font-size : 32px;\r\n        font-weight : 300;\r\n        line-height : 1.5;\r\n    }\r\n    /////////////////////도서관 줄달린 타이틀아래///////////////////////////\r\n    .--librarytitle{        \r\n        ::before{\r\n            content : '';\r\n            position : absolute;\r\n            top : 100%;\r\n            left : 40%;\r\n            width : 20%;\r\n            height : 50%;\r\n            background : url('images/libraryunder.png') no-repeat;\r\n            background-size : 100%;\r\n        }\r\n    }\r\n    ////////////////////////mj-title 타이틀/////////////////////////////\r\n    .mj-title{\r\n        font-size : 80px;\r\n\r\n        @media screen and (max-width : ${props=>props.theme.mediumde}){\r\n            font-size : 50px;\r\n        } \r\n        @media screen and (max-width : ${props=>props.theme.smallde}){\r\n            font-size : 34px;\r\n        }\r\n    }\r\n    //////////////////mj구획 경계선 확인용!!/////////////////////////\r\n`\r\nexport default GlobalStyle;","import { all } from \"@redux-saga/core/effects\";\r\nimport { combineReducers } from \"redux\";\r\nimport infinityreducer, { InfinitySaga } from './infinityscroll';\r\n\r\nconst rootReducer = combineReducers({\r\n    infinityreducer,\r\n});\r\n\r\nexport default rootReducer;\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n\r\nexport function* rootSaga(){\r\n    yield all([\r\n        InfinitySaga(),\r\n    ])\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from 'styles/theme';\nimport GrobalStyle from './styles/GlobalStyle';\n\nimport createSagaMiddleware from 'redux-saga';\nimport { applyMiddleware, createStore } from 'redux';\nimport rootReducer, { rootSaga } from 'modules';\nimport { Provider } from 'react-redux';\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware))\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store = {store}>\n      <ThemeProvider theme = {theme}>\n      <GrobalStyle/>\n        <App />\n      </ThemeProvider>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import {DefaultTheme} from 'styled-components';\r\n\r\nconst theme:DefaultTheme = {\r\n    largede : '1024px',\r\n    mediumde : '1024px',\r\n    smallde : '768px',\r\n\r\n    mjcolor : {\r\n        //검은색계통\r\n        realblack : '#000000',\r\n        zinmuk : '#141414',\r\n        karazeclible : '#141212',\r\n        siam : '#020715',\r\n        cosmic_siam : '#000012',\r\n        moonlightblack : '#110105',\r\n        mjblack : '#120012',\r\n        //회색\r\n        grayfont : '#888888',\r\n        \r\n        //흰색\r\n        gitbackground : '#f5f5f5',\r\n        gitborder : '#e5e5e5',\r\n\r\n        //노란색\r\n        librarytitle : '#faca81',\r\n        //푸른색\r\n        cursurbackground : 'rgba(145,167,255, 0.3)',\r\n        hoveractivebackground : '#dbe4ff;',\r\n        hoverclosebackground : '#bac8ff',\r\n        borderofrealback : '#214d9b',\r\n    }\r\n};\r\nexport {theme};","import { datastype } from \"api/ArchiveAPI\";\r\n\r\nexport const CALL_DATA = 'infinity/CALL_DATA' as const;\r\nexport const CALL_DATA_SUCEESS = 'infinity/CALL_DATA_SUCESS' as const;\r\nexport const CALL_DATA_ERROR = 'infinity/CALL_DATA_ERROR' as const;\r\nexport const CALL_DATA_SEARCH = 'infinity/CALL_DATA_SEARCH' as const;\r\nexport const CALL_DATA_SEARCH_SUCEESS = 'infinity/CALL_DAT_SEARCHA_SUCESS' as const;\r\nexport const CALL_DATA_SEARCH_ERROR = 'infinity/CALL_DATA_SEARCH_ERROR' as const;\r\nexport const RESET_DATA = 'infinity/RESET_DATA' as const;\r\nexport const END_CALL = 'infinity/END_CALL' as const;\r\n\r\nexport const calldata = (datas : datastype) => {\r\n    return {type : CALL_DATA, datas : datas};\r\n}\r\nexport const calldatasucess = (datas : datastype) => {\r\n    return {type : CALL_DATA_SUCEESS, data : datas};\r\n}\r\nexport const calldataerror = (error : Error) => {\r\n    return {type : CALL_DATA_ERROR, error : error};\r\n}\r\n\r\nexport const calldatasearch = (search : string, datas : datastype) => {\r\n    return {type : CALL_DATA_SEARCH, datas : datas, search : search};\r\n}\r\nexport const calldatasearchsucess = (datas : datastype) => {\r\n    return {type : CALL_DATA_SEARCH_SUCEESS, data : datas};\r\n}\r\nexport const calldatasearcherror = (error : Error) => {\r\n    return {type : CALL_DATA_SEARCH_ERROR, error : error};\r\n}\r\n\r\n\r\nexport const resetdata = (datas : datastype, search : string) =>{\r\n    return {type : RESET_DATA, datas : datas, search : search};\r\n}\r\nexport const endcall = () =>{\r\n    return {type : END_CALL};\r\n}"],"sourceRoot":""}